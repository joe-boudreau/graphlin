/**
 * THIS FILE IS AUTOGENERATED, DO NOT MODIFY. EDIT THE FILES IN templates/
 * AND RUN ./gradlew :codegen INSTEAD!
 */

package ${namespace}.ndarray

import koma.ndarray.*
import koma.internal.getRng
import koma.internal.syncNotNative

class Default${dtype}NDArrayFactory: NumericalNDArrayFactory<${dtype}> {
    override fun createGeneric(lengths: IntArray, filler: (IntArray)->${dtype}) = Default${dtype}NDArray(*lengths, init=filler)

    override fun zeros(vararg lengths: Int) = Default${dtype}NDArray(*lengths) { 0${literalSuffix} }

    override fun ones(vararg lengths: Int) = Default${dtype}NDArray(*lengths) { 1${literalSuffix} }

    override fun rand(vararg lengths: Int): NDArray<${dtype}> {
        val rng = getRng()
        return syncNotNative(rng) {
            Default${dtype}NDArray(*lengths) {
               rng.nextDoubleUnsafe().to${dtype}()
            }
        }
    }

    override fun randn(vararg lengths: Int): NDArray<${dtype}> {
        val rng = getRng()
        return syncNotNative(rng) {
            Default${dtype}NDArray(*lengths) {
                rng.nextGaussianUnsafe().to${dtype}()
            }
        }
    }
}
